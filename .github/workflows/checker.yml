name: Followers hourly check

on:
  schedule:
    - cron: '0 * * * *'
  push:
  workflow_dispatch:

concurrency:
  group: followers-cron
  cancel-in-progress: true

permissions:
  contents: write

env:
  GH_USER: ${{ github.repository_owner }}
  CONFIG_PATH: .github/followers.json

jobs:
  check-followers:
    runs-on: ubuntu-24.04
    steps:
      - name: checkout
        uses: actions/checkout@v4

      # --- GitHub followers ---
      - name: fetch followers via GitHub API
        id: gh
        env:
          GH_TOKEN: ${{ github.token }}
          GH_USER: ${{ env.GH_USER }}
        run: |
          set -euo pipefail
          resp="$(curl -sS -H "Authorization: Bearer ${GH_TOKEN}" -H "Accept: application/vnd.github+json" "https://api.github.com/users/${GH_USER}")"
          followers="$(printf '%s' "$resp" | jq -r '.followers')"
          [[ "$followers" =~ ^[0-9]+$ ]] || { echo "failed to parse GH followers"; echo "$resp"; exit 1; }
          echo "count=${followers}" >> "$GITHUB_OUTPUT"

      # --- YouTube subscribers без API ключа: yt-dlp по @handle ---
      - name: fetch subscribers via yt-dlp (no API key)
        id: yt
        run: |
          set -euo pipefail
          # устанавливаем yt-dlp через pipx (без мусора в системе)
          python3 -m pip install --user --quiet pipx
          python3 -m pipx ensurepath
          export PATH="$HOME/.local/bin:$PATH"
          pipx run --spec yt-dlp yt-dlp --version >/dev/null

          url="https://www.youtube.com/@michaelbely"

          # извлекаем channel_id и количество подписчиков; если скрыты — может вернуться пусто
          channel_id="$(pipx run yt-dlp -I 1 --print "%(channel_id)s" "$url" 2>/dev/null || true)"
          subs="$(pipx run yt-dlp -I 1 --print "%(channel_subscriber_count)s" "$url" 2>/dev/null || true)"

          # fallback: страница "О канале"
          if ! [[ "${subs:-}" =~ ^[0-9]+$ ]]; then
            about_url="${url%/}/about"
            subs="$(curl -sS "$about_url" | grep -Eo '"subscriberCountText":[^}]+' | grep -Eo '[0-9]+' | head -n1 || true)"
          fi

          [[ "${subs:-}" =~ ^[0-9]+$ ]] || { echo "failed to obtain YouTube subscribers (скрыто или парсинг не удался)"; exit 1; }
          echo "count=${subs}" >> "$GITHUB_OUTPUT"
          echo "cid=${channel_id}" >> "$GITHUB_OUTPUT"

      # --- Единый JSON-список ---
      - name: prepare single json (list)
        id: prepare
        env:
          CONFIG_PATH: ${{ env.CONFIG_PATH }}
          GH_COUNT: ${{ steps.gh.outputs.count }}
          YT_COUNT: ${{ steps.yt.outputs.count }}
        run: |
          set -euo pipefail
          mkdir -p "$(dirname "$CONFIG_PATH")"
          tmp="${CONFIG_PATH}.tmp"

          jq -n --argjson gh "$GH_COUNT" --argjson yt "$YT_COUNT" '[
            {type:"github",  followers:$gh},
            {type:"youtube", followers:$yt}
          ]' > "$tmp"

          if [ -f "$CONFIG_PATH" ]; then
            old_gh="$(jq -r '.[] | select(.type=="github")  | .followers'  "$CONFIG_PATH" || echo '')"
            old_yt="$(jq -r '.[] | select(.type=="youtube") | .followers'  "$CONFIG_PATH" || echo '')"
          else
            old_gh=""; old_yt=""
          fi
          echo "old_gh=${old_gh}" >> "$GITHUB_OUTPUT"
          echo "old_yt=${old_yt}" >> "$GITHUB_OUTPUT"

          if [ "$old_gh" = "$GH_COUNT" ] && [ "$old_yt" = "$YT_COUNT" ]; then
            echo "changed=false" >> "$GITHUB_OUTPUT"
            rm -f "$tmp"
          else
            mv "$tmp" "$CONFIG_PATH"
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: commit and push if changed
        if: steps.prepare.outputs.changed == 'true'
        env:
          CONFIG_PATH: ${{ env.CONFIG_PATH }}
          GH: ${{ steps.gh.outputs.count }}
          YT: ${{ steps.yt.outputs.count }}
        run: |
          set -euo pipefail
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add "$CONFIG_PATH"
          git commit -m "chore: update followers GH=${GH} YT=${YT} [skip ci]"
          git push

      # --- FCM combined push (как раньше) ---
      - name: extract project id from SA secret
        id: pid
        env:
          SA_JSON: ${{ secrets.GCP_SA_KEY }}
        run: |
          set -euo pipefail
          umask 177
          printf '%s' "${SA_JSON}" > sa.json
          pid="$(jq -r '.project_id' sa.json)"
          [ -n "$pid" ] && [ "$pid" != "null" ] || { echo "project_id not found in SA"; exit 1; }
          echo "project_id=$pid" >> "$GITHUB_OUTPUT"
          rm -f sa.json

      - name: auth to Google (FCM v1)
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: setup gcloud
        uses: google-github-actions/setup-gcloud@v2

      - name: send FCM push (combined)
        env:
          PROJECT_ID: ${{ steps.pid.outputs.project_id }}
          OWNER: ${{ env.GH_USER }}
          GH_NEW: ${{ steps.gh.outputs.count }}
          YT_NEW: ${{ steps.yt.outputs.count }}
          GH_OLD: ${{ steps.prepare.outputs.old_gh }}
          YT_OLD: ${{ steps.prepare.outputs.old_yt }}
        run: |
          set -euo pipefail
          ACCESS_TOKEN="$(gcloud auth print-access-token)"
          gh_old="${GH_OLD:-0}"; gh_new="${GH_NEW:-0}"; gh_delta=$(( gh_new - gh_old ))
          yt_old="${YT_OLD:-0}"; yt_new="${YT_NEW:-0}"; yt_delta=$(( yt_new - yt_old ))
          body="GH ${OWNER}: ${gh_old} → ${gh_new} (Δ ${gh_delta}) | YT: ${yt_old} → ${yt_new} (Δ ${yt_delta})"
          jq -n --arg body "$body" --arg ghd "$gh_delta" --arg ytd "$yt_delta" '{
            message:{
              topic:"followers_updates",
              android:{ notification:{ channel_id:"followers2" } },
              notification:{title:"Followers update", body:$body},
              data:{type:"followers_combo", gh_delta:$ghd, yt_delta:$ytd}
            }
          }' > body.json
          curl -sS -X POST \
            -H "Authorization: Bearer ${ACCESS_TOKEN}" \
            -H "Content-Type: application/json; charset=UTF-8" \
            -d @body.json \
            "https://fcm.googleapis.com/v1/projects/${PROJECT_ID}/messages:send"